March 15, 2019

I had a good interview with employer candidate L27 yesterday. I am hopeful it will lead to interview #2. Interview #2 will involve more scrutiny of my technical abilities, which is both fair and expected. As the position I'm seeking involves web development using Angular (js, html, css, Typescript, etc), I am adding Angular development to my growing List of Things. 

As it happens, I have had a wee idea for a small data-driven application that is an ideal use case for Angular web development, and so this project was born. 

I am about 3 full days into some excellent online Angular tutorials at the moment, and intend to double down on that by the end of the weekend; this project will slowly evolve as I learn how to implement the things I need to implement.

This repo will be become a portfolio piece to demonstrate my approach to building out small projects using Git, as I learn. For the purpose of this exercise, I will act as both the client (the fellow who needs the app built, in order to make the Big Monies), and the designer / developer (the fellow who needs to build the client's app on spec, and on time, in order to earn the Medium Monies). In truth of course, no Canadian currency will be exchanging hands, though I still reserve the right to fire myself, should the project go off the rails spectacularly.


--

March 21, 2019

DM: I have been making steady progress with the Udemy Angular course and associated Googles, and have a better sense of the basic building blocks that make up an Angular app, through absorbing theory and undertaking some practice. I can confirm a functional wireframe is achievable  by Monday Mar 25

CM: I have also been (in the role of client who understands software development terminology and concepts) been generating wireframes and rough architectural diagrams describing the app at a high level. 

The app will appear like a book (the Compendium of Heroes), in landscape, two-page format. Each open pair of pages (initially) will be dedicated to a single hero - the left-side page will be the hero's character sheet, which will include major view areas describing the hero's identity (qualities, name, profession, rank, and origin), images (portrait and landscape), and detail lists (skills, challenges, gifts, and goals). The right-side page is for a short story / background for the hero. It may include a quote (stylized, for example, in italics) followed by a text field (possibly scroll-able - the Compendium is magic after all). 

Navigation elements designed into the book's styling will permit paging back and forward, in three increments: Full forward / back (to nav to the first or last page), alphabetical jumping (page forward or back by first letter in hero names, who are alphabetically ordered), and page-by-page navigation.

DM: Sprint 1 will first produce a functional wireframe (minimal skinning, basic representative layout, functional UI navigation) which displays one or more heroes from an initially static, local data model. This will be JSON. Management and retrieval of the model will be handled by an Angular Service (BookDataManager) that encapsulates fetching and modifying the data from and to the datastore (or initially, locally), and providing Angular components methods to access their portions of the model for local binding to their templates.

Major application components (not exhaustive)

App 
- Book
-- BG
-- PageView
--- HeroSheet
---- IdentitySection
---- ImageSection
---- ListsSection
--- HeroStory

etc.

